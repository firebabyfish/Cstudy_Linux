#include <sys/ipc.h>
#include <sys/shm.h>
int shmget(key_t key, size_t size, int shmflg);
    - 功能：创建一个新的共享内存段，或者获取一个既有的共享内存段的标识。
        新创建的内存段中的数据都会被初始化为0
    - 参数：
        - key：key_t类型是一个整形，通过这个找到或者创建一个共享内存。般使用16进制表示，非值
        - size：共享内存的大小
        - shmflg：属性
            - 访问权限
            - 附加属性:创建共享内存/判断共享内存是不是存在
                - 创建:IPC CREAT
                - 判断共享内存是否存在: IPC EXCL需要和IPC CREAT一起使用
                    IPC_CREAT | IPC EXCL | 664
    - 返回值：
        成功返回共享内存引用的ID，失败-1 

void *shmat(int shmid, const void *shmaddr, int shmflg);
    - 功能:和当前的进程进行关联
    - 参数:
        - shmid : 共享内存的标识 (ID),由shmget返回值获取
        - shmaddr: 申请的共享内存的起始地址，指定NULL，内核指定
        - shmflg : 对共享内存的操作
            - 读 : SHM_RDONLY，必须要有读权限
            - 读写: 
    返回值:
        成功: 返回共享内存的首 (起始) 地址。失败(void *) -1

int shmdt(const void *shmaddr);
    - 功能:解除当前进程和共享内存的关联
    - 参数:
        - shmaddr:共享内存的首地址
    - 返回值: 成功 0，失败 -1

int shmctl(int shmid, int cmd, struct shmid ds *buf);
    - 功能:对共享内存进行操作。删除共享内存，共享内存要删除才会消失，
        创建共享内存的进程被销毁了，对共享内存没有影响
    - 参数:
        - shmid: 共享内存的ID
        - cmd : 要做的操作
            - IPC STAT : 获取共享内存的当前的状态
            - IPC SET : 设置共享内存的状态
            - IPC RMID: 标记共享内存被销毁
    - buf:需要设置或者获取的共享内存的属性信息
        - IPC STAT : buf存储数据
        - IPC SET : buf中需要初始化数据，设置到内核中
        - IPC RMID : 没有用，

key_t ftok(const char *pathname, int proj id);
    - 功能：根据指定的路径名和int值，生成一个共享内存的key
    - 参数：
        - pathname:指定一个存在的路径
        - proj_id: int类型的值，但是这系统调用只会使用其中的1个字节
            范围 : 9-255 一般指定一个字符 'a'
        

问题1: 操作系统如何知道一块共享内存被多少个进程关联?
    - 共享内存维护了一个结构体struct shmid_ds 这个结构体中有一个成员shm_nattach
    - shm_nattach 记录了关联的进程个数

问题2: 可不可以对共享内存进行多次删除 shmct1
    - 可以的
    - 因为shmct1 标记删除共享内存，不是直接删除
    - 什么时候真正删除呢?
        - 当和共享内存关联的进程数为0的时候，就真正被删除
    - 当共享内存的key为0的时候，表示共享内存被标记删除了
        - 如果一个进程和共享内存取消关联，那么这个进程就不能继续操作这个共享内存，也不能再次关联

共享内存和内存映射的区别
1.共享内存可以直接创建，内存映射需要磁盘文件(匿名映射除外)
2.共享内存效果更高
3.内存
    所有的进程操作的是同一块共享内存。
    内存映射，每个进程在自己的虚拟地址空间中有一个独立的内存。
4.数据安全
    - 进程突然退出
        共享内存还存在
        内存映射区消失
    - 运行进程的电脑死机，宕机了
        数据存在在共享内存中，没有了
        内存映射区的数据，由于磁盘文件中的数据还在，所以内存映射区的数据还存在
5.生命周期
    - 内存映射区:进程退出，内存映射区销毁
    - 共享内存:进程退出，共享内存还在，手动删除，或者关机
        如果一个进程退出，会自动和共享内存进行取消关联

